#!/bin/bash

set -euo pipefail

# A bash script for managing caddy in conjunction with launchd
# Adapted from apachectl from the Apache Software Foundation
# Copyright (c) 2020 Noel Fort√©

# util vars
RESET="\033[0m"
BOLD="\033[1m"
RED="\033[31m"
GREEN="\033[32m"
YELLOW="\033[33m"
BLUE="\033[34m"
ARGV="$@"

# main definitions
LAUNCHCTL=/bin/launchctl
CADDY=/usr/local/sbin/caddy
LAUNCHD_JOB=~/Library/LaunchAgents/com.caddyserver.plist
DEV_PATH=<ROOT_PATH>

reset_logs() {
	# put the logs back if they went missing
	if [[ ! -e ${DEV_PATH}/log ]] ; then mkdir ${DEV_PATH}/log ; fi
	if [[ ! -e ${DEV_PATH}/log/caddy.log ]] ; then touch ${DEV_PATH}/log/caddy.log ; fi
}

# logic
case $ARGV in
	start)
		reset_logs
		echo -e "${YELLOW}Starting Caddy...${RESET}"
		$LAUNCHCTL load -w $LAUNCHD_JOB
		echo -e "${BOLD}${GREEN}Caddy loaded and started.${RESET}"
		exit 0
		;;
	
	stop)
		echo -e "${YELLOW}Stopping Caddy...${RESET}"
		$LAUNCHCTL unload -w $LAUNCHD_JOB
		echo -e "${BOLD}${RED}Caddy unloaded and halted.${RESET}"
		exit 0
		;;

	reload)
		reset_logs
		echo -e "${YELLOW}Reloading Caddy...${RESET}"
		$CADDY reload --config "${CONFIG_PATH}/config/Caddyfile"
		echo -e "${BOLD}${BLUE}Caddy reloaded.${RESET}"
		exit 0
		;;

	restart)
		reset_logs
		echo -e "${BOLD}${YELLOW}Restarting Caddy...${RESET}"
		echo -e "${YELLOW}Stopping Caddy...${RESET}"
		$LAUNCHCTL unload -w $LAUNCHD_JOB
		echo -e "${BOLD}${RED}Caddy unloaded and halted.${RESET}"
		echo -e "${YELLOW}Starting Caddy...${RESET}"
		$LAUNCHCTL load -w $LAUNCHD_JOB
		echo -e "${BOLD}${GREEN}Caddy loaded and started.${RESET}"
		exit 0
		;;

	configtest)
		echo -e "${YELLOW}Testing Caddyfile...${RESET}"
		$CADDY validate --config $2
		exit 0
		;;

	*)
		echo -e "${YELLOW}\nUsage is 'caddyctl <command>', where <command> is:\n${RESET}"
		echo -e "start          Starts caddy persistantly by loading a .plist into launchd via launchctl"
		echo -e "stop           Stops caddy by unloading previously loaded .plist from launchd via launchctl"
		echo -e "reload         Reloads caddy by executing 'caddy reload' to reload the configuration in place"
		echo -e "restart        Effectively 'stop' and 'start' consecutively in 1 step"
		echo -e "configtest     Tests the configuration at ${DEV_PATH}"
		exit 1
		;;
esac